openapi: 3.0.0 # Note: Using version 3.0.0 as specified in the input
info:
  title: Open Source Examples - 'Messages' as Input
  description: Explore open-source AI models that take `messages` as input across various tasks via HTTP requests. We've standardized the schema, allowing you to call any model seamlessly via its `modelId` in the format `org/model_name.` Filter models by task or explore via our UI.
  version: 1.0.0
servers:
  - url: https://api.bytez.com
    description: Production server
paths:
  '/models/v2/openai/gpt-4o-audio-preview':
    post:
      summary: Chat
      description: Interact with OpenAI's GPT-4 model for chat and multi-modal tasks.
      operationId: chatWithGPT4
      # Parameters like Authorization/Provider-key removed, handled by securitySchemes + security keyword
      requestBody:
        $ref: '#/components/requestBodies/ChatRequestBody' # Reference request body component
      responses:
        '200':
          description: Successful response with the output from the model.
          headers:
            Content-Type:
              $ref: '#/components/headers/ContentTypeHeader' # Reference header component
            X-Response-Time:
              $ref: '#/components/headers/XResponseTimeHeader' # Reference header component
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSuccessResponseSchema' # Reference common response schema
              examples: # Examples kept specific to the endpoint, matching the new schema
                Text:
                  summary: Example for text-only input
                  value:
                    error: null
                    output: # Note: The original output object fits within the 'any' type
                      role: assistant
                      content: I can definitely help you generate code! Please tell me what language and functionality you need.
                Text + Image:
                  summary: Example for text and image input
                  value:
                    error: null
                    output:
                      role: assistant
                      content: The image shows the Eiffel Tower covered in snow. A picnic would not be a good idea in this location because it is too cold and snowy.
                Text + Audio:
                  summary: Example for text and audio input
                  value:
                    error: null
                    output:
                      role: assistant
                      content: The sun rises in the east and sets in the west. This simple fact has been observed by humans for thousands of years.
      security:
        # Assumes both keys are required simultaneously for a request
        - apiKeyAuth: [] # References the scheme defined in components
          providerKeyAuth: [] # References the scheme defined in components
components:
  schemas:
    # Request Body Schemas
    ContentPart:
      type: object
      properties:
        type:
          type: string
          description: "Content type. Examples: 'text', 'image_url', 'audio_url'." # Clarified description
          example: text
        text:
          type: string
          description: Text content (used when type is 'text').
          example: How many sentences was that?
        url:
          type: string
          format: url
          description: URL of the content (used when type is 'image_url' or 'audio_url').
          example: https://openaiassets.blob.core.windows.net/$web/API/docs/audio/alloy.wav
      required:
        - type # Only type is strictly required; presence of text/url depends on type value

    Message:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          description: "Role of the message sender (e.g., 'user', 'assistant')."
          example: user
        content:
          type: array
          description: Array of content parts making up the message payload.
          items:
            $ref: '#/components/schemas/ContentPart'

    ChatRequestBodySchema:
      type: object
      required:
        - json
        - messages
      properties:
        json:
          type: boolean
          description: If true, forces the model's response to be a valid JSON object. Default is false.
          example: false
        messages:
          type: array
          description: An array of message objects representing the conversation history.
          items:
            $ref: '#/components/schemas/Message'

    # Response Schema
    GenericSuccessResponseSchema:
      type: object
      required:
        - error
        - output
      properties:
        error:
          type: string
          nullable: true # Allows the value to be null
          description: Null on success, error message string on failure.
          example: null
        output:
          # No 'type' specified, allowing any valid JSON type (string, number, boolean, array, object).
          description: Model-specific output. The structure will vary based on the model and request.
      description: Generic response structure containing the model output or an error.

  # Request Body Component
  requestBodies:
    ChatRequestBody:
      description: Input consisting of conversation messages, potentially including multimodal content like image or audio URLs.
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChatRequestBodySchema'

  # Header Components
  headers:
    ContentTypeHeader:
      description: Content type of the response body.
      schema:
        type: string
      example: application/json; charset=utf-8
    XResponseTimeHeader:
      description: Time taken by the server to process the request, in milliseconds.
      schema:
        type: string
      example: 1242ms

  # Security Schemes
  securitySchemes:
    apiKeyAuth: # Using the preferred definition
      type: apiKey
      in: header
      name: Authorization
      description: > # Using folded style for multi-line description
        Set `Authorization` header to `Key BYTEZ_KEY` (e.g. 'Authorization': 'Key ABC123')
    providerKeyAuth: # Added scheme for the provider key
      type: apiKey
      in: header
      name: Provider-Key # Correct header name
      description: Provider-specific API key (e.g., your OpenAI API key). Add if required by the specific model provider.
