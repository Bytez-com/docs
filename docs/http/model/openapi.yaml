openapi: 3.0.3
info:
  title: Open Source Model API
  description: >-
    # ðŸš€ Get started here

    Guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.

    âœ¨ Link to [Bytez GitHub README.md](https://github.com/Bytez-com/docs).
  version: 1.0.0
servers:
  - url: https://api.bytez.com
    description: Production server

paths:
  /models/v2/{modelId}:
    post:
      summary: Run Model
      description: Runs an open/closed model. Note, if you're running an open model and haven't created a cluster, this call automatically creates a cluster for you.
      operationId: runModel
      parameters:
        - $ref: "#/components/parameters/modelId"
      requestBody:
        description: >
          The required inputs vary by task. For text-based tasks like text-generation, summarization, and translation, include the "text" field. For chat tasks, use "messages". For image tasks (like image-to-text, image-classification, object-detection, etc.), supply input using either "url" or "base64". For audio tasks such as automatic-speech-recognition, provide audio using "url" or "base64". Question-based tasks like question-answering require both "question" and "context". Zero-shot tasks need "candidate_labels" and may also require "text" or "image". Some tasks, like unconditional-image-generation, may not need any input. Always refer to the specific model's task to determine the required fields.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Input text to be processed by the model (used for most NLP tasks).
                messages:
                  type: array
                  description: >
                    An array of chat messages representing the conversation history. Each message must have a `role` (`system`, `user`, or `assistant`) and `content`.

                    The `content` can be:

                    - A simple string
                    - An array of content blocks where each block has a `type` (e.g. `text`, `image`, `audio`, or `video`) and the corresponding data via `text`, `url`, or `base64`.

                  items:
                    type: object
                    required:
                      - role
                      - content
                    properties:
                      role:
                        type: string
                        enum: [system, user, assistant]
                        description: The sender of the message.
                      content:
                        oneOf:
                          - type: string
                            description: Text-only message content.
                          - type: array
                            description: Multi-modal message content blocks.
                            items:
                              type: object
                              required:
                                - type
                              properties:
                                type:
                                  type: string
                                  enum: [text, image, audio, video]
                                  description: The type of content block.
                                text:
                                  type: string
                                  description: Text content (used with type 'text').
                                url:
                                  type: string
                                  format: uri
                                  description: HTTP URL to image/audio/video (used with type 'image/audio/video').
                                base64:
                                  type: string
                                  description: Base64-encoded image/audio/video (used with type 'image/audio/video').
                url:
                  type: string
                  format: uri
                  description: URL to an image, audio, or video file (used for image/audio/video tasks).
                base64:
                  type: string
                  description: Handles Base64-encoded image, audio, or video. Using URLs is recommended to avoid large payloads, which slow your requests down.
                question:
                  type: string
                  description: Question text (used in question-answering tasks).
                context:
                  type: string
                  description: Context paragraph (used in question-answering).
                candidate_labels:
                  type: array
                  items:
                    type: string
                  description: List of candidate labels (used in zero-shot tasks).
                stream:
                  type: boolean
                  description: Enable/disable text streaming.
                json:
                  type: boolean
                  description: Similar to stream, but for media. Streams back media instead returning it in JSON format.
                params:
                  type: object
                  description: Model-specific parameters. See model documentation for details.
                  properties:
                    min_length:
                      type: integer
                      description: Minimum length of the response.
                    max_length:
                      type: integer
                      description: Maximum length of the response.
                    temperature:
                      type: number
                      description: Sampling temperature for generation.

      responses:
        "200":
          description: Successful response from the model.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: null
                    description: Null if everything is fine
                  output:
                    description: Model output will either be a string, object, or array of items.
                    oneOf:
                      - type: string
                      - type: object
                      - type: array
                        items: {}
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitError"
      security:
        - apiKeyAuth: []

    put:
      summary: CREATE cluster
      description: >
        Create an auto-scaling cluster to run an open-source model.
        This call sets up concurrency, scaling behavior, and shutdown logic based on usage.
      operationId: createModelCluster
      parameters:
        - $ref: "#/components/parameters/modelId"
      requestBody:
        description: >
          Define cluster behavior using `timeout` and `capacity`
        content:
          application/json:
            schema:
              type: object
              properties:
                timeout:
                  type: integer
                  default: 10
                  description: Minutes to wait before shutting down if no requests are received
                capacity:
                  type: object
                  properties:
                    min:
                      type: integer
                      default: 0
                      description: Minimum number of instances to scale down to
                    desired:
                      type: integer
                      default: 1
                      description: Target number of instances to keep running
                    max:
                      type: integer
                      default: 1
                      maximum: 10
                      description: Maximum number of instances allowed

      responses:
        "202":
          description: Cluster created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: null
                    description: Null if everything is fine
                  output:
                    type: string
                    description: Operation success message
                    example: Loading
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitError"

      security:
        - apiKeyAuth: []

    get:
      summary: READ cluster
      description: Get details about a live cluster
      operationId: readModelCluster
      parameters:
        - $ref: "#/components/parameters/modelId"
      responses:
        "200":
          description: Cluster information retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: null
                    description: Null if everything is fine
                  output:
                    type: object
                    description: Your cluster
                    properties:
                      modelId:
                        type: string
                        example: stabilityai/stable-diffusion-xl-base-1.0
                      status:
                        type: string
                        example: booting instance
                      created:
                        type: string
                        format: date-time
                        example: 2025-04-22T17:57:40.036Z
                      modified:
                        type: string
                        format: date-time
                        example: 2025-04-22T17:57:58.638Z
                      timeout:
                        type: integer
                        example: 5
                      capacity:
                        type: object
                        properties:
                          min:
                            type: integer
                            example: 0
                          desired:
                            type: integer
                            example: 1
                          max:
                            type: integer
                            example: 1
                        required:
                          - min
                          - desired
                          - max
                      instances:
                        type: integer
                        example: 1
                      inferences:
                        type: integer
                        example: 0
                      lastInference:
                        type: string
                        format: date-time
                        example: 2025-04-22T17:57:40.036Z
                    required:
                      - modelId
                      - status
                      - created
                      - modified
                      - timeout
                      - capacity
                      - instances
                      - inferences
                      - lastInference

        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitError"
      security:
        - apiKeyAuth: []

    patch:
      summary: UPDATE cluster
      description: Update the capacity or configuration of the specified model cluster.
      operationId: updateModelCluster
      parameters:
        - $ref: "#/components/parameters/modelId"
      requestBody:
        description: >
          Update cluster behavior using `timeout` and `capacity`
        content:
          application/json:
            schema:
              type: object
              properties:
                timeout:
                  type: integer
                  default: 5
                  description: Minutes to wait before shutting down if no requests are received
                capacity:
                  type: object
                  properties:
                    min:
                      type: integer
                      default: 0
                      description: Minimum number of instances to scale down to
                    desired:
                      type: integer
                      default: 1
                      description: Target number of instances to keep running
                    max:
                      type: integer
                      default: 1
                      maximum: 10
                      description: Maximum number of instances allowed
      responses:
        "200":
          description: Returns the updated Cluster with your new settings.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: null
                    description: Null if everything is fine
                  output:
                    type: object
                    description: Your cluster
                    properties:
                      modelId:
                        type: string
                        example: stabilityai/stable-diffusion-xl-base-1.0
                      status:
                        type: string
                        example: booting instance
                      created:
                        type: string
                        format: date-time
                        example: 2025-04-22T17:57:40.036Z
                      modified:
                        type: string
                        format: date-time
                        example: 2025-04-22T17:57:58.638Z
                      timeout:
                        type: integer
                        example: 2
                      capacity:
                        type: object
                        properties:
                          min:
                            type: integer
                            example: 2
                          desired:
                            type: integer
                            example: 5
                          max:
                            type: integer
                            example: 10
                        required:
                          - min
                          - desired
                          - max
                      instances:
                        type: integer
                        example: 1
                      inferences:
                        type: integer
                        example: 0
                      lastInference:
                        type: string
                        format: date-time
                        example: 2025-04-22T17:57:40.036Z
                    required:
                      - modelId
                      - status
                      - created
                      - modified
                      - timeout
                      - capacity
                      - instances
                      - inferences
                      - lastInference
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitError"
      security:
        - apiKeyAuth: []

    delete:
      summary: DELETE cluster
      description: Delete a model cluster
      operationId: deleteModelCluster
      parameters:
        - $ref: "#/components/parameters/modelId"
      responses:
        "200":
          description: Status 200 with null for error and output
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: null
                    description: Null if everything is fine
                  output:
                    type: string
                    example: null
                    description: Null if deleted successfully
        "401":
          $ref: "#/components/responses/Unauthorized"
        "429":
          $ref: "#/components/responses/RateLimitError"
      security:
        - apiKeyAuth: []

components:
  responses:
    RateLimitError:
      description: Too Many Requests â€“ You have hit the rate limit.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Rate limit exceeded"
              output:
                type: string
                example: null
    Unauthorized:
      description: Auth error - check your api key and how you're sending it.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Unauthorized"
              output:
                type: string
                example: null
  parameters:
    modelId:
      name: modelId
      in: path
      required: true
      description: The model you want to run (e.g., `openai-community/gpt2`).
      schema:
        type: string

  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: >
        Set `Authorization` header to `Key BYTEZ_KEY` (e.g. 'Authorization':
        'Key ABC123')
