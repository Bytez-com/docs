{
  "openapi": "3.0.3",
  "info": {
    "title": "Useful Functions & Model Library",
    "description": "Explore available models and tasks.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.bytez.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/models/v2/list/models": {
      "get": {
        "summary": "Get Models",
        "description": "Retrieve a list of available models for various tasks. Use the query parameter `task` to filter by task type, e.g. `chat`.",
        "operationId": "getModels",
        "parameters": [
          {
            "name": "task",
            "in": "query",
            "description": "The specific task type to filter models. Supported task types include:\n`audio_classification`, `automatic_speech_recognition`, `chat`, `depth_estimation`, `document_question_answering`, `feature_extraction`, `fill_mask`, `image_classification`, `image_feature_extraction`, `image_segmentation`, `image_text_to_text`, `image_to_text`, `mask_generation`, `object_detection`, `question_answering`, `sentence_similarity`, `summarization`, `text_classification`, `text_generation`, `text_to_audio`, `text_to_image`, `text_to_speech`, `text_to_video`, `text2text_generation`, `token_classification`, `translation`, `unconditional_image_generation`, `video_classification`, `visual_question_answering`, `zero_shot_classification`, `zero_shot_image_classification`, `zero_shot_object_detection`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "chat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response containing the list of models.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "models": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/models/v2/list/tasks": {
      "get": {
        "summary": "Get Tasks",
        "description": "Retrieve a list of tasks supported by the platform.",
        "operationId": "getTasks",
        "responses": {
          "200": {
            "description": "A successful response containing the list of tasks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tasks": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/models/v2/list/clusters": {
      "get": {
        "summary": "Get Clusters",
        "description": "Retrieve a list of available model clusters.",
        "operationId": "getClusters",
        "responses": {
          "200": {
            "description": "A successful response containing the list of clusters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clusters": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization",
        "description": "Provide your API key as `Key your-key-here` in the `Authorization` header."
      }
    }
  }
}
