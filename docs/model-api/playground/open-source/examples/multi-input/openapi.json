{
    "openapi": "3.0.3",
    "info": {
      "title": "Open Source AI Models API - Multi-input Examples",
      "description": "API for running open-source AI models across various multi-input tasks.",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://api.bytez.com",
        "description": "Production server"
      }
    ],
    "paths": {
      "/models/v2/airesearch/xlm-roberta-base-finetune-qa": {
        "post": {
          "summary": "Question Answering",
          "description": "Answer a question given a context using the `xlm-roberta-base-finetune-qa` model.",
          "operationId": "questionAnswering",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "question": {
                      "type": "string",
                      "description": "The question to answer.",
                      "example": "What's my name?"
                    },
                    "context": {
                      "type": "string",
                      "description": "The context providing the answer.",
                      "example": "My name is Ron"
                    }
                  },
                  "required": ["question", "context"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful response with the answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "output": { "type": "string", "description": "The answer to the question." }
                    }
                  },
                  "example": {
                    "output": "Ron"
                  }
                }
              }
            }
          },
          "security": [{ "apiKeyAuth": [] }]
        }
      },
      "/models/v2/cloudqi/CQI_Visual_Question_Awnser_PT_v0": {
        "post": {
          "summary": "Document Question Answering",
          "description": "Answer a question based on the content of a document using the `CQI_Visual_Question_Awnser_PT_v0` model.",
          "operationId": "documentQA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "question": {
                      "type": "string",
                      "description": "The question to answer.",
                      "example": "What's the total cost?"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the document.",
                      "example": "https://templates.invoicehome.com/invoice-template-us-neat-750px.png"
                    }
                  },
                  "required": ["question", "url"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful response with the answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "output": { "type": "string", "description": "The extracted answer from the document." }
                    }
                  },
                  "example": {
                    "output": "$154.06"
                  }
                }
              }
            }
          },
          "security": [{ "apiKeyAuth": [] }]
        }
      },
      "/models/v2/aqachun/Vilt_fine_tune_2000": {
        "post": {
          "summary": "Visual Question Answering",
          "description": "Answer a question based on an image using the `Vilt_fine_tune_2000` model.",
          "operationId": "visualQA",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "question": {
                      "type": "string",
                      "description": "The question to answer.",
                      "example": "What kind of animal is this?"
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the image.",
                      "example": "https://ocean.si.edu/sites/default/files/styles/3_2_largest/public/2023-11/Screen_Shot_2018-04-16_at_1_42_56_PM.png.webp?itok=Icvi-ek9"
                    },
                    "base64": {
                      "type": "string",
                      "description": "Base64-encoded image data.",
                      "example": "/9j/4AAQSkZJRgABAQAAAQABAAD..."
                    }
                  },
                  "oneOf": [{ "required": ["url"] }, { "required": ["base64"] }]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful response with the answer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "output": { "type": "string", "description": "The answer to the question." }
                    }
                  },
                  "example": {
                    "output": "Cat"
                  }
                }
              }
            }
          },
          "security": [{ "apiKeyAuth": [] }]
        }
      },
      "/models/v2/google/owlv2-base-patch16-finetuned": {
        "post": {
          "summary": "Zero Shot Object Detection",
          "description": "Detect objects in an image using the `owlv2-base-patch16-finetuned` model.",
          "operationId": "zeroShotObjectDetection",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "candidate_labels": {
                      "type": "array",
                      "items": { "type": "string" },
                      "description": "Labels for object detection.",
                      "example": ["squid", "octopus", "human", "cat"]
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the image.",
                      "example": "https://ocean.si.edu/sites/default/files/styles/3_2_largest/public/2023-11/Screen_Shot_2018-04-16_at_1_42_56_PM.png.webp?itok=Icvi-ek9"
                    },
                    "base64": {
                      "type": "string",
                      "description": "Base64-encoded image data.",
                      "example": "/9j/4AAQSkZJRgABAQAAAQABAAD..."
                    }
                  },
                  "oneOf": [{ "required": ["url"] }, { "required": ["base64"] }]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful response with detected objects.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "output": { "type": "array", "description": "Detected objects and scores." }
                    }
                  },
                  "example": {
                    "output": [
                      {
                        "score": 0.838,
                        "label": "octopus",
                        "box": { "xmin": 0, "ymin": -2, "xmax": 990, "ymax": 665 }
                      }
                    ]
                  }
                }
              }
            }
          },
          "security": [{ "apiKeyAuth": [] }]
        }
      },
      "/models/v2/BilelDJ/clip-hugging-face-finetuned": {
        "post": {
          "summary": "Zero Shot Image Classification",
          "description": "Classify images into candidate labels using the `clip-hugging-face-finetuned` model.",
          "operationId": "zeroShotImageClassification",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "candidate_labels": {
                      "type": "array",
                      "items": { "type": "string" },
                      "description": "Labels for classification.",
                      "example": ["squid", "octopus", "human", "cat"]
                    },
                    "url": {
                      "type": "string",
                      "description": "URL of the image.",
                      "example": "https://ocean.si.edu/sites/default/files/styles/3_2_largest/public/2023-11/Screen_Shot_2018-04-16_at_1_42_56_PM.png.webp?itok=Icvi-ek9"
                    },
                    "base64": {
                      "type": "string",
                      "description": "Base64-encoded image data.",
                      "example": "/9j/4AAQSkZJRgABAQAAAQABAAD..."
                    }
                  },
                  "oneOf": [{ "required": ["url"] }, { "required": ["base64"] }]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful response with classification results.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "output": { "type": "array", "description": "Classification results." }
                    }
                  },
                  "example": {
                    "output": [
                      { "score": 0.838, "label": "octopus" }
                    ]
                  }
                }
              }
            }
          },
          "security": [{ "apiKeyAuth": [] }]
        }
      },
      "/models/v2/AyoubChLin/DistilBERT_eco_ZeroShot": {
        "post": {
          "summary": "Zero Shot Classification",
          "description": "Classify text into candidate labels using the `DistilBERT_eco_ZeroShot` model.",
          "operationId": "zeroShotClassification",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "candidate_labels": {
                      "type": "array",
                      "items": { "type": "string" },
                      "description": "Labels for classification.",
                      "example": ["positive", "negative"]
                    },
                    "text": {
                      "type": "string",
                      "description": "Text to classify.",
                      "example": "Ninja turtles are cool"
                    }
                  },
                  "required": ["candidate_labels", "text"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful response with classification results.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "output": { "type": "array", "description": "Classification results." }
                    }
                  },
                  "example": {
                    "output": [
                      { "score": 0.92, "label": "positive" }
                    ]
                  }
                }
              }
            }
          },
          "security": [{ "apiKeyAuth": [] }]
        }
      }
    },
    "components": {
      "securitySchemes": {
        "apiKeyAuth": {
          "type": "apiKey",
          "name": "Authorization",
          "in": "header",
          "description": "Provide your API key as `Key your-key-here` in the `Authorization` header."
        }
      }
    }
  }
  